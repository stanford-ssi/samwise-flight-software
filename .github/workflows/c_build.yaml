name: C/C++ Build

on:
  push:
    paths:
      - "src/**"
      - "cmake/**"
      - "CMakeLists.txt"
      - ".github/workflows/*.yaml"
  pull_request:
    paths:
      - "src/**"
      - "cmake/**"
      - "CMakeLists.txt"
      - ".github/workflows/*.yaml"
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: PICO
            cmake_args: "-DPROFILE=PICO"
            build_dir: "build-2040"
            artifact: "samwise-products-pico"
          - name: PICUBED-FLIGHT
            cmake_args: "-DPROFILE=PICUBED-FLIGHT"
            build_dir: "build-2350"
            artifact: "samwise-products-picubed-flight"
          - name: PICUBED-BRINGUP
            cmake_args: "-DPROFILE=PICUBED-BRINGUP"
            build_dir: "build-2350"
            artifact: "samwise-products-picubed-bringup"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Project
        run: ./configure.sh

      - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1

      - name: Configure profile
        run: |
          if [ "${{ matrix.name }}" = "PICUBED-FLIGHT" ]; then
            cmake -B ${{ github.workspace }}/${{ matrix.build_dir }} -DCOMMIT_HASH=${{ github.sha }} -DPACKET_HMAC_PSK=${{ secrets.PACKET_HMAC_PSK }} ${{ matrix.cmake_args }}
          else
            cmake -B ${{ github.workspace }}/${{ matrix.build_dir }} -DCOMMIT_HASH=${{ github.sha }} ${{ matrix.cmake_args }}
          fi

      - name: Build profile
        run: cmake --build ${{ github.workspace }}/${{ matrix.build_dir }} --parallel 4

      - name: Archive Build Products
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: |
            ${{ matrix.build_dir }}/src/samwise*.uf2
