name: C/C++ Build and Release

on:
  push:
    branches:
      - main # Trigger only on pushes to the main branch
      - create-releases # Trigger also on the new testing branch
    paths:
      - "src/**"
      - "CMakeLists.txt"
  pull_request:
    paths:
      - "src/**"
      - "CMakeLists.txt"
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Project
        run: ./configure.sh

      - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
        uses: carlosperate/arm-none-eabi-gcc-action@v1

      # Build PICO profile
      - name: Configure PICO profile
        run: cmake -B ${{github.workspace}}/build-2040 -DCOMMIT_HASH=${{github.sha}} -DPROFILE=PICO
      - name: Build PICO profile
        run: cmake --build ${{github.workspace}}/build-2040 --parallel 4

      # Build PICUBED-FLIGHT profile
      - name: Configure PICUBED-FLIGHT profile
        run: cmake -B ${{github.workspace}}/build-2350 -DCOMMIT_HASH=${{github.sha}} -DPROFILE=PICUBED-FLIGHT
      - name: Build PICUBED-FLIGHT profile
        run: cmake --build ${{github.workspace}}/build-2350 --parallel 4

      # Build PICUBED-BRINGUP profile
      - name: Configure PICUBED-BRINGUP profile
        run: cmake -B ${{github.workspace}}/build-2350-bringup -DCOMMIT_HASH=${{github.sha}} -DPROFILE=PICUBED-BRINGUP # Use a different build directory to avoid conflicts
      - name: Build PICUBED-BRINGUP profile
        run: cmake --build ${{github.workspace}}/build-2350-bringup --parallel 4

      # Create Release and Upload Assets (only on main branch pushes)
      - name: Create Release
        if: github.ref == 'refs/heads/main' # Only run this step if the push is to the main branch
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}-${{ github.sha }} # Example tag: v123-abcdef123...
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload PICO UF2 to Release
        if: github.ref == 'refs/heads/main' # Only run this step if the push is to the main branch
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/build-2040/src/samwise-pico.uf2 # Assuming a specific filename for PICO
          asset_name: samwise-pico.uf2

      - name: Upload PICUBED-FLIGHT UF2 to Release
        if: github.ref == 'refs/heads/main' # Only run this step if the push is to the main branch
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/build-2350/src/samwise-picubed-flight.uf2 # Assuming a specific filename
          asset_name: samwise-picubed-flight.uf2

      - name: Upload PICUBED-BRINGUP UF2 to Release
        if: github.ref == 'refs/heads/main' # Only run this step if the push is to the main branch
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/build-2350-bringup/src/samwise-picubed-bringup.uf2 # Assuming a specific filename
          asset_name: samwise-picubed-bringup.uf2